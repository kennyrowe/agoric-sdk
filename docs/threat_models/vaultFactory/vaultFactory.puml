@startuml
header Agoric Systems Operating Company.
footer v0.0.1
title VaultFactory

skinparam componentStyle rectangle
skinparam defaultTextAlignment center


actor "VaultFactoryCreator aka Governance" as vfc

actor Borrower

node AdjustBalancesInvitation
node "CloseVaultInvitation"
node LiquidationPromise
node LiquidationSeat {
    circle getPayout
    circle getPayouts
}
node "Vat" {
    node VaultFactory {
        node AMM
        node "publicAPI" {
            circle getCollaterals
            circle makeLoanInvitation
            circle getRunIssuer
            circle getAMM
            getAMM -d-> AMM
        }
        node "creatorFacet" {
            circle makeAddTypeInvitation
        }
    }
    node "Vault" {
        circle makeCloseInvitation
        makeCloseInvitation -u-> CloseVaultInvitation
        circle makeAdjustBalancesInvitation
        makeAdjustBalancesInvitation -u-> AdjustBalancesInvitation
        circle getCollateralAmount
        circle getDebtAmount
        circle getLiquidationSeat
        getLiquidationSeat -u-> LiquidationSeat
        circle getLiquidationPromise
        getLiquidationPromise -u-> LiquidationPromise
    }
}
Borrower -> makeLoanInvitation: open vault and transfer collateral
makeLoanInvitation -d-> Vault
Borrower -u-> getPayout: retrieve any proceeds
Borrower -u-> getPayouts: retrieve any proceeds
Borrower -d-> LiquidationPromise: did loan get liquidated?
Borrower -> AdjustBalancesInvitation: add or remove collateral or \nincrease or decrease the loan balance
Borrower -l-> CloseVaultInvitation: close loan and withdraw \nany remaining collateral
vfc -d-> makeAddTypeInvitation
Borrower -d-> getDebtAmount: how much do I owe
Borrower -d-> getCollateralAmount: how much did I \ndeposit as collateral

@enduml